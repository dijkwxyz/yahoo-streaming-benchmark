# Copyright 2015, Yahoo Inc.
# Licensed under the terms of the Apache License 2.0. Please see LICENSE file in the project root for terms.

# ====== experiment.sh config ======
# TEST_TIME=1800
# TM_FAILURE_INTERVAL=-1
# FLINK_PARALLELISM=28
# NET_THRESHOLD=1048576
# ============ kafka ============
kafka.brokers:
    - "kafka1"
    - "kafka2"
kafka.port: 9092
kafka.topic: "ad-events"
kafka.isolation.level: read_uncommitted
#consumer group
group.id: "flink_yahoo_benchmark"
#parallelism of kafka consumer
#kafka.partitions: 8
kafka.zookeeper.path: /
bootstrap.servers: "kafka1:9092, kafka2:9092"

# ============ zookeeper ============
zookeeper.servers:
    - "zk1"
zookeeper.port: 2181

# ============ redis ============
redis.host: "redis1"

# ============ Flink ============
window.size: 90
window.slide: 1
test.parallelism: 28

# ============ java load generator ============
# set if running the EventGenerator directly rather than reading from Kafka
use.local.event.generator: false
# flush redis before starting load, turn of if using EventGenerator due to parallelism
redis.flush: false
# number of events per second
load.target.hz: 28000
cpu.load.adjuster: 1500
num.campaigns: 2800
num.ad.per.campaigns: 10

# ========== others =============
# sample roughly every 3 seconds
throughput.log.freq: 1000

# ========== experiment parameters =============
mtti.ms: 60000
failure.inject.useProbability: true
failure.start.delay.ms: 465000
stream.endless: true
test.time.seconds: 1800
generate.data.time.seconds: 1800

# ============ checkpointing ============
flink.checkpoint.interval: 30000
flink.checkpoint.min-pause: 30000
multilevel.enable: false
#multilevel.level0.statebackend: "memory"
#multilevel.level0.path: ""
multilevel.level0.statebackend: "fs"
multilevel.level0.path: "file:///dev/shm/flink/"
multilevel.level1.statebackend: "fs"
multilevel.level1.path: "file:///home/ec2-user/yahoo-streaming-benchmark/flink-1.11.2/data/checkpoints/fs"
multilevel.level2.statebackend: "fs"
multilevel.level2.path: "hdfs://hadoop1:9000/flink/checkpoints"
multilevel.pattern: "1,2"
singlelevel.statebackend: "fs"
singlelevel.path: "hdfs://hadoop1:9000/flink/checkpoints"
#singlelevel.path: "file:///home/ec2-user/yahoo-streaming-benchmark/flink-1.11.2/data/checkpoints/fs"

